Get to a working product ASAP and then start iterating improvings!
Front end features
  Front End Analsysi Feature Utilising a Chart
  Single Trade Share
  Save Data in a consolidation manner in db
  Insert Paper Trade
  Modal
  Websockets
Project Management
SOLID
Automated Testing
DevOps pipeline : pull request lint test build merge pr create image etc
Back End Hosted On AWS, Kubernetes
Architecture:
Scaling:
Security:
SHARE
Update documentation
Redis cache
Fix CSS minor glitches
Demo screen
Lighthouse report
SEO Accessibility
Change Password using email and create user using email as confirmation
Stripe for payements
UML Diagram
Postman
Session for language



Resources:

Authentiction resource: https://www.youtube.com/watch?v=fqXC2V-MSV4
Next Auth Examples:
https://next-auth-example.vercel.app/



Scripts:
clear && npm cache clean --force && npm run dev --turbolear && npm cache clean --force && npm run dev --t

Resources for blog
Authentiction resource: https://www.youtube.com/watch?v=fqXC2V-MSV4
https://vercel.com/guides/nextjs-prisma-postgres
https://github.com/max-programming/auth-creds-tutorial


Typescript Module Augmentation
https://dev.to/josemukorivo/unlock-next-level-authentication-in-nextjs-with-next-auth-and-typescript-module-augmentation-1689


Dmitry next-auth.t.ds custom fields
https://github.com/dmitrykulakovfrontend/InterviewPlayBook/blob/main/types/next-auth.d.ts


Next.js configuration article
https://www.ryanelainska.com/nextjs-starter


How to close dropdown on outside click NEXT.JS
https://stackoverflow.com/questions/63086609/how-to-close-dropdown-on-outside-click-next-js






pull request lint test build merge pr create image etc



Build your images seperately and then combine them using docker compose
https://www.reddit.com/r/docker/comments/18d7641/ive_been_trying_to_set_up_docker_with_prisma/

Testing Crash Course:
https://betterprogramming.pub/a-crash-course-in-testing-next-js-projects-9fc57ed4a5bb


Runs services found in you docker-compose.yml file
sudo docker-compose up -d

Container Service Status: 
sudo docker-compose ps

Postgresql shell inside container: 
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db


Next.js Image
sudo docker build -t mtrade-app-test .
sudo docker run -p 3000:3000 --env-file .env.local mtrade-app-test
sudo docker-compose logs -f

ALSO REMOVE VOLUMES
sudo docker-compose down -v




upgrade to version 4: next auth
https://next-auth.js.org/getting-started/upgrade-v4
Setting up images with Sharp?(recomended by next.js)
https://blog.logrocket.com/processing-images-sharp-node-js/

Prisma Vercel Solution: 
https://www.prisma.io/docs/orm/more/help-and-troubleshooting/help-articles/vercel-caching-issue


// To Run Docker locally 
docker-compose -f docker-compose.dev.yml up -d
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db




docker-compose exec nextjs-app npx prisma generate



// Prisma manual db push. You need to run this again when you bring the volumes down. 
docker exec -it mtrade-app-dev npx dotenv -e .env.local -- prisma db push


TODO NEXTdocker
Fix add api colors
Make Responsive
Make changes to SQL and api request
trades page
analysisq



Your API Key Page checks to see if any exiss
If they do they show them in the page they show them by exchange category
clicking on exchange takes you to the list of available apis where you can or delete

Start here: 
If they don't exist you shoudl be ad the add exchange api screen by default

docker exec -it mtrade-app-dev npx dotenv -e .env.local -- prisma db push
docker-compose -f docker-compose.dev.yml up -d --build --no-cache
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db



Fetch The available exchanges that should popular in your api adition menu
Add exchange 
Add exchange to user should change ux/ui
Option to delete exchange(Further modification later)
Then work on showing the data from BOTH exchanges 
Simple Analysis visual




//Basic start up 
docker-compose -f docker-compose.dev.yml up -d

sudo docker-compose exec postgres psql -U mtrade -d mtrade-db
docker logs mtrade-app-dev
// Prisma manual db push. You need to run this again when you bring the volumes down. 
docker exec -it mtrade-app-dev npx dotenv -e .env.local -- prisma db push

// Database refresh
TRUNCATE "Exchange", "ApiKey";~
docker-compose down -v
docker-compose exec nextjs-app npx prisma generate
docker exec -it mtrade-app-dev npx dotenv -e .env.local -- prisma db push
Need to insert Exchanges manually:
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db
insert into "Exchange" (id, name) values (gen_random_uuid(), 'Ok');  




// auth helper function
https://next-auth.js.org/configuration/nextjs#getserversession

sudo docker-compose up --build -d
sudo docker-compose down
docker-compose exec nextjs-app npm run dev
sudo docker-compose logs nextjs-app

docker-compose -f docker-compose.dev.yml up --build -d

sudo docker-compose -f docker-compose.dev.yml exec nextjs-app sh


sudo docker-compose exec postgres psql -U mtrade -d mtrade-db







Killing a port
lsof -i :3000
kill -9 <PID>

                // const kraken = new ccxt.kraken({
                //     apiKey: "8kAC/5horFHKdLin4eiCb+t8Dr8E4oCEwM97+M86t8DZaavJ3ArJVbr4",
                //     secret: "zvKaDJsNgxiOx1gE/usnfk2/iYd17CFT+yX3GwpiV4HlkaAqdrPaGO723zDZCwqUaME/c0skb8kqjp+8WMgXAQ==",
                // });
                // This Works
                // const kraken = new ccxt.kraken({
                //     apiKey: "8kAC/5horFHKdLin4eiCb+t8Dr8E4oCEwM97+M86t8DZaavJ3ArJVbr4",
                //     secret: "zvKaDJsNgxiOx1gE/usnfk2/iYd17CFT+yX3GwpiV4HlkaAqdrPaGO723zDZCwqUaME/c0skb8kqjp+8WMgXAQ==",
                // });


let kraken = new ccxt.kraken ({
  apiKey: '8kAC/5horFHKdLin4eiCb+t8Dr8E4oCEwM97+M86t8DZaavJ3ArJVbr4',
  secret: 'zvKaDJsNgxiOx1gE/usnfk2/iYd17CFT+yX3GwpiV4HlkaAqdrPaGO723zDZCwqUaME/c0skb8kqjp+8WMgXAQ==',
})

    // To do onlyh one api key per exchange for now



//  Installing Docker-Compose


// Starting Docker-compose desktop
 systemctl --user start docker-desktop



// Clean architecture
https://www.freecodecamp.org/news/build-full-stack-app-with-typescript-nextjs-redux-toolkit-firebase/#howtoimplementauthenticationwithnextauthjs
https://merlino.agency/blog/clean-architecture-in-express-js-applications








// Getting development started
sudo docker-compose up -d
sudo docker-compose exec postgres psql -U mtrade -d mtrade-db
docker exec -it mtrade-app npx dotenv -e .env.local -- prisma db push

sudo: Execute the following command with superuser privileges.
docker-compose: Command-line tool for managing multi-container Docker applications.
exec: Execute a command within a running container.
postgres: Name of the service defined in the Docker Compose file, representing the PostgreSQL database.
psql -U mtrade -d mtrade-db: Command to run within the container:
psql: PostgreSQL interactive terminal.
-U mtrade: Specifies the PostgreSQL user as mtrade.
-d mtrade-db: Specifies the PostgreSQL database as mtrade-db.







